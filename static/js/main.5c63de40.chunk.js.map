{"version":3,"sources":["components/scorecard.jsx","components/frame.jsx","components/game.jsx","App.js","index.js"],"names":["ScoreCard","_ref","totalScore","frameScores","frameCounter","frameScoreList","map","frameScore","react_default","a","createElement","firstRoll","secondRoll","frameTotal","className","aria-hidden","Frame","_this$props","this","props","onFirstRoll","onSecondRoll","frameValue","extraBallCount","onFrameSubmit","onReset","hasExtraBall","ballType","onSubmit","htmlFor","id","value","type","disabled","firstRollDisabled","min","max","onChange","secondRollDisabled","secondRollMaxRange","onClick","Component","Game","onRestart","App","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleFrameSubmit","event","preventDefault","parseInt","state","finalScore","isLastFrame","maxFrames","frameInfo","frameState","NA","maxFramePins","STRIKE","lastFrameExtras","SPARE","info","gameOver","updatePreviousScore","setState","prevState","frameIntialValue","previousScoreIndex","length","previousScores","toConsumableArray","objectSpread","concat","console","log","handleFirstRoll","target","rollVal","handleSecondRoll","handleRestart","window","location","reload","handleReset","counters","freeze","bind","assertThisInitialized","game","scorecard","components_frame","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.5c63de40.chunk.js","sourcesContent":["import React from \"react\";\n\n// Stateless Functional Component\n\nconst ScoreCard = ({ totalScore, frameScores }) => {\n  let frameCounter = 1;\n  const frameScoreList = frameScores.map((frameScore) =>\n    <li>Frame {frameCounter++} --- {frameScore.firstRoll} | {frameScore.secondRoll} \n       -- {frameScore.frameTotal}\n    </li>\n  );\n\n  return (\n    <div className=\"score-card\">\n      <div>\n        <i className=\"fa fa-gamepad fa-lg m-2\" aria-hidden=\"true\" />\n        Score\n        <span className=\"badge-style badge badge-info m-2 \" >\n          {totalScore}\n        </span>\n      </div>\n\n      <div className=\"frame-score\">\n        <ul>\n          {frameScoreList}\n        </ul>\n      </div>\n\n    </div>\n  );\n};\n\nexport default ScoreCard;\n","import React, { Component } from \"react\";\n\nclass Frame extends Component {\n\n  render() {\n    const { onFirstRoll, onSecondRoll, frameCounter, frameValue, extraBallCount, onFrameSubmit, onReset } = this.props;\n    const hasExtraBall = extraBallCount > 0 ? true : false;\n    const ballType = hasExtraBall ? \"Extra-ball\" : \"ball\";\n    return (\n      <div className=\"frame-group\">\n        <span className=\"badge-style badge badge-info\">\n          {!hasExtraBall ? (<span>Frame &nbsp; {frameCounter} &nbsp;</span>) : \n          (<span> Extra Ball &nbsp; {extraBallCount} &nbsp;</span>)}\n        </span>\n\n        <form onSubmit={onFrameSubmit}>\n          <div className=\"form-group\">\n            <label htmlFor=\"new-todo\"> Enter {ballType}-1 score: </label>\n            <input id=\"firstRoll\" className=\"form-input\" value={frameValue.firstRoll} type=\"number\"\n              disabled={frameValue.firstRollDisabled} min=\"0\" max=\"10\" onChange={onFirstRoll}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"new-todo\"> Enter {ballType}-2 score: </label>\n            <input id=\"secondRoll\" className=\"form-input\" value={frameValue.secondRoll}\n              disabled={frameValue.secondRollDisabled} type=\"number\" min=\"0\" max={frameValue.secondRollMaxRange} onChange={onSecondRoll}\n            />\n          </div>\n          <button className=\"btn btn-success m-2\">\n            Submit frame #{frameCounter}\n            <i className=\"fa fa-check\" aria-hidden=\"true\" />\n          </button>\n          <button className=\"btn btn-success m-2\" \n            onClick={onReset}> Reset\n            <i className=\"fa fa-refresh\" aria-hidden=\"true\" />\n          </button>\n        </form>\n\n        \n      </div>\n    );\n  }\n}\n\nexport default Frame;\n","import React, { Component } from \"react\";\n\nclass Game extends Component {\n  render() {\n    const { onRestart } = this.props;\n    return (\n      <div>\n        <div className='reset-pos'>\n          <button className=\"btn btn-primary m-2\" onClick={onRestart}> \n            <i className=\"fa fa-power-off\" aria-hidden=\"true\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n\n}\n\nexport default Game;\n","import React, { Component } from \"react\";\nimport ScoreCard from \"./components/scorecard\";\nimport Frame from \"./components/frame\";\nimport Game from \"./components/game\";\n\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.frameIntialValue = {\n      firstRoll: 0,\n      secondRoll: 0,\n      firstRollDisabled: false,\n      secondRollDisabled: true,\n      secondRollMaxRange: 10,\n    }\n\n    this.state = {\n      finalScore: 0,\n      frameCounter: 1,\n      extraBallCount: 0,\n      counters: [],\n      frameValue: this.frameIntialValue,\n      frameScores: [],\n      gameOver: false\n    };\n\n    this.frameState = Object.freeze({\n      NA: \"NA\",\n      SPARE: \"SPARE\",\n      STRIKE: \"STRIKE\"\n    });\n\n    this.lastFrameExtras = Object.freeze({\n      NA: 0,\n      SPARE: 1,\n      STRIKE: 2\n    });\n\n    this.maxFrames = 10;\n    this.maxFramePins = 10;\n\n    this.handleFrameSubmit = this.handleFrameSubmit.bind(this);\n    this.handleReset = this.handleReset.bind(this);\n    this.updatePreviousScore = this.updatePreviousScore.bind(this);\n    this.handleFirstRoll = this.handleFirstRoll.bind(this);\n  }\n\n  handleFrameSubmit = (event) => {\n    event.preventDefault();\n    let firstRoll = parseInt(this.state.frameValue.firstRoll);\n    let secondRoll = parseInt(this.state.frameValue.secondRoll);\n    let frameTotal = firstRoll + secondRoll;\n    let finalScore = this.state.finalScore;\n    let frameCounter = this.state.frameCounter;\n    let isLastFrame = (frameCounter === this.maxFrames) ? true : false;\n\n    let frameScore = {\n      firstRoll: firstRoll,\n      secondRoll: secondRoll,\n      frameTotal: frameTotal\n    };\n    if (this.state.frameCounter <= this.maxFrames) {\n\n      let frameInfo = this.frameState.NA;\n      let extraBallCount = 0;\n      if (firstRoll === this.maxFramePins) {\n        frameInfo = this.frameState.STRIKE;\n        extraBallCount = isLastFrame ? this.lastFrameExtras.STRIKE : 0;\n      } else if (frameTotal === this.maxFramePins) {\n        frameInfo = this.frameState.SPARE;\n        extraBallCount = isLastFrame ? this.lastFrameExtras.SPARE : 0;\n      }\n      frameScore.info = frameInfo;\n      let gameOver = (this.state.frameCounter === this.maxFrames && extraBallCount === 0) ? true : false;\n\n      if (this.state.frameCounter > 1) {\n        this.updatePreviousScore(frameScore, extraBallCount, gameOver);\n      } else {\n        this.setState((prevState) => ({\n          frameCounter: prevState.frameCounter + 1,\n          frameScores: [frameScore],\n          finalScore: finalScore + frameScore.frameTotal,\n          frameValue: this.frameIntialValue,\n        }));\n      }\n    } else {\n      let extraBallCount = this.state.extraBallCount;\n      this.updatePreviousScore(frameScore, extraBallCount, true);\n    }\n  };\n\n  updatePreviousScore = (frameScore, extraBallCount, gameOver) => {\n    let finalScore = this.state.finalScore;\n    let previousScoreIndex = this.state.frameScores.length - 1;\n    let previousScores = [...this.state.frameScores];\n    previousScores[previousScoreIndex] = { ...previousScores[previousScoreIndex] };\n    if (this.state.frameScores[previousScoreIndex].info === this.frameState.STRIKE) {\n      if (this.state.frameScores.length > 1) {\n        previousScores[previousScoreIndex - 1] = { ...previousScores[previousScoreIndex - 1] };\n        if (this.state.frameScores[previousScoreIndex - 1].info === this.frameState.STRIKE) {\n          previousScores[previousScoreIndex - 1].frameTotal = previousScores[previousScoreIndex - 1].frameTotal +\n            frameScore.firstRoll;\n          if (extraBallCount === 0) {\n            finalScore += frameScore.firstRoll;\n          }\n        }\n      }\n      previousScores[previousScoreIndex].frameTotal += frameScore.frameTotal;\n      finalScore += frameScore.frameTotal + frameScore.frameTotal;\n    } else if (this.state.frameScores[previousScoreIndex].info === this.frameState.SPARE) {\n      previousScores[previousScoreIndex].frameTotal += frameScore.firstRoll;\n      finalScore += frameScore.firstRoll;\n    } else {\n      finalScore += frameScore.frameTotal;\n    }\n\n    this.setState((prevState) => ({\n      ...this.state,\n      extraBallCount: extraBallCount,\n      frameCounter: ++prevState.frameCounter,\n      frameScores: [...previousScores, frameScore],\n      frameValue: { ...this.frameIntialValue },\n      finalScore: finalScore,\n      gameOver: gameOver,\n    }), () => {\n      console.log(\"prev \", this.state.frameScores);\n    });\n\n  };\n\n  handleFirstRoll = (event) => {\n    let firstRoll = event.target.value;\n    const rollVal = {\n      ...this.state.frameValue,\n      firstRoll: parseInt(firstRoll),\n      secondRollDisabled: ((this.state.extraBallCount === 0 && firstRoll < 10) || (this.state.extraBallCount === 2)) ? false : true,\n      secondRollMaxRange: (this.state.extraBallCount === 0) ? 10 - parseInt(firstRoll) : 10\n    };\n    this.setState({ frameValue: rollVal });\n  };\n\n  handleSecondRoll = (event) => {\n    const rollVal = {\n      ...this.state.frameValue,\n      firstRollDisabled: true,\n      secondRoll: event.target.value\n    };\n    this.setState({ frameValue: rollVal });\n  };\n\n  handleRestart = () => {\n    window.location.reload();\n  };\n\n  handleReset = (event) => {\n    event.preventDefault();\n    this.setState((prevState) => ({\n      frameValue: this.frameIntialValue,\n      frameCounter: prevState.frameCounter\n    }));\n  };\n\n  render() {\n    return (\n      <div className=\"main__wrap\">\n        <main className=\"container\">\n          <div className=\"card__box\">\n           <Game\n           onRestart={this.handleRestart}\n           />\n            <ScoreCard\n              totalScore={this.state.finalScore}\n              frameScores={this.state.frameScores}\n              frameCounter={this.state.frameCounter}\n            />\n            <div>\n              {!this.state.gameOver ? (\n                <Frame\n                  frameValue={this.state.frameValue}\n                  frameCounter={this.state.frameCounter}\n                  extraBallCount={this.state.extraBallCount}\n                  onReset={this.handleReset}\n                  onFrameSubmit={this.handleFrameSubmit}\n                  onFirstRoll={this.handleFirstRoll}\n                  onSecondRoll={this.handleSecondRoll}\n                />\n                ) :\n                (<span className=\"game-over\">\n                  Game Over! Your score is {this.state.finalScore}\n                </span>)\n              }\n            </div>\n          </div>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"font-awesome/css/font-awesome.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}